#!/usr/bin/env bash

set -e

if [[ ! -n $CHECKOUT_ROOT ]]; then
  source /code/utils/pkg/includes/common
else
  source $CHECKOUT_ROOT/utils/pkg/includes/common
fi

platform=$1
platform_family=$(echo $platform|cut -d':' -f 1)
platform_release=$(echo $platform|cut -d':' -f 2)
package_type=$2

install_fpm  () {
  echo "## Installing fpm ##"
  # script is run from $checkout/utils/pkg
  if [[ $(cat /etc/issue) =~ 12.04 ]]; then
    apt-get update
    apt-get install python-software-properties -y
    apt-add-repository ppa:brightbox/ruby-ng -y
    apt-get update
    apt-get install build-essential -y
    apt-get install ruby2.1 libruby2.1 ruby2.1-dev -y
  elif [[ $(cat /etc/issue) =~ 14.04 ]]; then
    apt-get update
    apt-get install software-properties-common -y
    apt-add-repository ppa:brightbox/ruby-ng -y
    apt-get update
    apt-get install build-essential -y
    apt-get install ruby2.1 libruby2.1 ruby2.1-dev -y
  elif [[ -f /etc/redhat-release ]]; then
    yum groupinstall "Development Tools" -y
    yum install ruby ruby-devel -y
  fi
  gem install bundler --no-ri --no-rdoc
  gem install fpm --no-ri --no-rdoc
}

setup_working_dirs () {
  echo "## Setting up directories to build packags ##"
  mkdir -p tmp/$package_type/usr/local/bin
  if [[ $platform_family =~ ubuntu$ ]]; then
    mkdir -p tmp/$package_type/etc/init
    mkdir -p tmp/$package_type/etc/default
  elif [[ $platform_family =~ centos$ ]]; then
    mkdir -p tmp/$package_type/lib/systemd/system
    mkdir -p tmp/$package_type/etc/default
  fi
  mkdir -p tmp/output/$package_type/$platform_family/$platform_release
}

copy_binary () {
  echo "## Copying travis-worker binary into build directory ##"
  cp /code/bin/travis-worker \
    tmp/$package_type/usr/local/bin
}

copy_service_scripts () {
  echo "## Setting up service scripts ##"
  if [[ $package_type == "deb" ]]; then
    cp /code/utils/pkg/templates/default_env_travis_enterprise \
      tmp/$package_type/etc/default/travis-enterprise

    cp /code/utils/pkg/templates/default_env_travis_worker \
      tmp/$package_type/etc/default/travis-worker

    cp /code/utils/pkg/templates/upstart_travis_worker.conf \
      tmp/$package_type/etc/init/travis-worker.conf

  elif [[ $package_type == "rpm" ]]; then
    cp /code/utils/pkg/templates/default_env_travis_enterprise \
      tmp/$package_type/etc/default/travis-enterprise

    cp /code/utils/pkg/templates/default_env_travis_worker \
      tmp/$package_type/etc/default/travis-worker

    cp /code/utils/pkg/templates/systemd_travis_worker.service \
      tmp/$package_type/lib/systemd/system/travis-worker.service
  fi
}

run_fpm () {
  echo "## Building package for $platform with fpm ##"
  fpm -f -s dir \
    --log info \
    -t $package_type \
    -p tmp/output/$package_type/$platform_family/$platform_release \
    --after-install utils/pkg/templates/post_install.sh \
    --before-remove utils/pkg/templates/pre_remove.sh \
    -n travis-worker \
    --url "https://github.com/travis-ci/worker" \
    --description "Travis-CI Go Worker" \
    -v $(git tag|tail -n 1|cut -d'v' -f 2) \
    -C tmp/$package_type \
    .

  chmod -R 777 /code/tmp
}

if [[ ! ruby ]]; then
  install_fpm
fi
setup_working_dirs
copy_binary
copy_service_scripts
run_fpm
